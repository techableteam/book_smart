# Resolve react_native_pods.rb with node to allow for hoisting
def node_require(script)
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
       '#{script}',
       {paths: [process.argv[1]]},
     )", __dir__]).strip
end
node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')
install! 'cocoapods', 
  :generate_multiple_pod_projects => true,
  :incremental_installation => true
platform :ios, '15.0'
use_modular_headers!
prepare_react_native_project!

# ✅ Disable Flipper temporarily
flipper_config = FlipperConfiguration.disabled

linkage = ENV['USE_FRAMEWORKS']
use_frameworks! :linkage => linkage.to_sym if linkage

# ✅ Move config OUTSIDE so it's available in post_install
config = use_native_modules!

target 'BookSmart' do

  pod 'GoogleUtilities', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true
  use_react_native!(
    :path => config[:reactNativePath],
    :flipper_configuration => flipper_config,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )
  # Explicitly add FirebaseAuth
  pod 'FirebaseAuth'

  # target 'BookSmartTests' do
  #   inherit! :complete
  # end
end

# ✅ Now config is accessible here
post_install do |installer|
  
  use_frameworks! :linkage => :static
  $RNFirebaseAsStaticFramework = true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true
  react_native_post_install(
    installer,
    config[:reactNativePath],
    :mac_catalyst_enabled => false
  )

  # Set Swift version for all targets
  installer.pods_project.build_configurations.each do |config|
    config.build_settings['SWIFT_VERSION'] = '5.0'
  end

  installer.pods_project.targets.each do |target|
    # Keep exactly one GoogleUtilities_Privacy bundle
    if target.name.include?('GoogleUtilities_Privacy')
      if google_utilities_kept
        target.remove_from_project
        puts "Removed duplicate GoogleUtilities target: #{target.name}"
      else
        google_utilities_kept = true
        puts "Keeping GoogleUtilities target: #{target.name}"
      end
    end

    # Keep exactly one RCTI18nStrings bundle
    if target.name.include?('RCTI18nStrings')
      if rct_i18n_kept
        target.remove_from_project
        puts "Removed duplicate RCTI18nStrings target: #{target.name}"
      else
        rct_i18n_kept = true
        puts "Keeping RCTI18nStrings target: #{target.name}"
      end
    end
  end
end

