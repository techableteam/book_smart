# Resolve react_native_pods.rb with node to allow for hoisting
def node_require(script)
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
       '#{script}',
       {paths: [process.argv[1]]},
     )", __dir__]).strip
end
node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')
install! 'cocoapods', 
  :generate_multiple_pod_projects => true,
  :incremental_installation => true
platform :ios, '15.0'
use_modular_headers!
prepare_react_native_project!

# ✅ Disable Flipper temporarily
flipper_config = FlipperConfiguration.disabled

linkage = ENV['USE_FRAMEWORKS']
use_frameworks! :linkage => linkage.to_sym if linkage

# ✅ Move config OUTSIDE so it's available in post_install
config = use_native_modules!

target 'BookSmart' do
  pod 'Firebase', '~> 11.11.0'
  pod 'Firebase/CoreOnly', '~> 11.11.0'
  pod 'GoogleUtilities', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true
  use_react_native!(
    :path => config[:reactNativePath],
    :flipper_configuration => flipper_config,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'BookSmartTests' do
    inherit! :complete
  end
end

post_install do |installer|
  use_frameworks! :linkage => :static
  $RNFirebaseAsStaticFramework = true
  # Initialize flags for tracking which bundles we've kept
  google_utilities_kept = false
  rct_i18n_kept = false

  # Modified react_native_post_install call with error handling
  begin
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
  rescue => e
    puts "⚠️ Warning: Could not complete react_native_post_install due to: #{e.message}"
    puts "This might be related to privacy manifest handling and can often be safely ignored."
  end

  installer.pods_project.targets.each do |target|
    # Keep exactly one GoogleUtilities_Privacy bundle
    if target.name.include?('GoogleUtilities_Privacy')
      if google_utilities_kept
        target.remove_from_project
        puts "Removed duplicate GoogleUtilities target: #{target.name}"
      else
        google_utilities_kept = true
        puts "Keeping GoogleUtilities target: #{target.name}"
      end
    end

    # Keep exactly one RCTI18nStrings bundle
    if target.name.include?('RCTI18nStrings')
      if rct_i18n_kept
        target.remove_from_project
        puts "Removed duplicate RCTI18nStrings target: #{target.name}"
      else
        rct_i18n_kept = true
        puts "Keeping RCTI18nStrings target: #{target.name}"
      end
    end
  end

  # Clean up build phases without removing all references
  installer.pods_project.targets.each do |target|
    target.build_phases.each do |phase|
      if phase.respond_to?(:name) && phase.name == '[CP] Copy Pods Resources'
        # Count occurrences of each bundle
        bundle_counts = Hash.new(0)
        phase.files.each do |file|
          if ['RCTI18nStrings.bundle', 'GoogleUtilities_Privacy.bundle'].include?(file.file_ref.path)
            bundle_counts[file.file_ref.path] += 1
          end
        end

        # Remove duplicates but keep one reference
        phase.files.each do |file|
          if bundle_counts[file.file_ref.path] > 1 && 
             ['RCTI18nStrings.bundle', 'GoogleUtilities_Privacy.bundle'].include?(file.file_ref.path)
            phase.remove_file_reference(file.file_ref)
            bundle_counts[file.file_ref.path] -= 1
            puts "Removed duplicate bundle reference: #{file.file_ref.path}"
          end
        end
      end
    end
  end

  # Re-generate the copy resources script
  resources_script_path = "#{installer.sandbox.root}/Target Support Files/Pods-BookSmart/Pods-BookSmart-resources.sh"
  
  # First remove any existing script to ensure clean state
  system("rm -rf '#{resources_script_path}'")
  
  # Then create the new script with proper content
  FileUtils.mkdir_p(File.dirname(resources_script_path))
  File.write(resources_script_path, <<~SCRIPT)
    #!/bin/sh
    # This is a minimal resources script that won't fail
    echo "Skipping resource copying - handled by React Native"
    exit 0
  SCRIPT
  FileUtils.chmod("+x", resources_script_path)
  puts "✅ Created/updated resources script at #{resources_script_path}"

  # Additional safety check
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      # Disable script sandboxing which can cause issues
      config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "i386"
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      config.build_settings['ENABLE_USER_SCRIPT_SANDBOXING'] = 'NO'
      config.build_settings['SUPPORTS_MACCATALYST'] = 'NO'
      config.build_settings['DERIVE_MACCATALYST_PRODUCT_BUNDLE_IDENTIFIER'] = 'NO'
    end
  end
end